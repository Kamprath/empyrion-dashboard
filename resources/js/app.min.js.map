{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/marked/lib/marked.js","resources/data/checklists.json","resources/js/app.js","resources/js/renderTemplate.js","resources/js/views/App.js","resources/js/views/ChecklistsSection.js","resources/js/views/Library.js","resources/js/views/TodoSection.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","Lexer","options","this","tokens","links","marked","defaults","rules","block","normal","gfm","tables","InlineLexer","inline","renderer","Renderer","breaks","pedantic","Parser","token","escape","html","encode","replace","unescape","_","toLowerCase","charAt","String","fromCharCode","parseInt","substring","regex","opt","source","self","name","val","RegExp","noop","merge","obj","target","key","arguments","Object","prototype","hasOwnProperty","src","callback","pending","highlight","lex","done","err","out","parse","type","text","lang","escaped","message","silent","newline","fences","hr","heading","nptable","lheading","blockquote","list","def","table","paragraph","bullet","item","_tag","lexer","top","bq","next","loose","cap","bull","b","space","exec","push","depth","header","split","align","cells","test","ordered","match","indexOf","smartLists","slice","join","sanitize","pre","sanitizer","href","title","charCodeAt","autolink","url","tag","link","reflink","nolink","strong","em","br","del","_inside","_href","output","mangle","inLink","outputLink","codespan","smartypants","image","ch","Math","random","toString","langPrefix","quote","level","raw","headerPrefix","xhtml","body","listitem","tablerow","content","tablecell","flags","prot","decodeURIComponent","parser","reverse","tok","pop","peek","parseText","row","cell","j","setOptions","inlineLexer","define","amd","window","global","CV Travel Prep","description","CV Maintenance","App","data","activateLastViewed","render","bindEvents","applyBlack","lastViewedID","getLastViewed","$lastViewedNav","$","removeClass","addClass","setLastViewed","id","localStorage","section","location","attr","TodoSectionView","ChecklistsSectionView","LibraryView","navViews","nav-todo","nav-checklists","nav-library","on","handleNavClick","bind","$item","view","console","error","preventDefault","parents","View","renderTemplate","unbind","resetList","completeItem","stopPropagation","$input","find","isChecked","prop","toggleClass","checklistTemplate","checklistItemTemplate","checklistSectionTemplate","$checklist","number","itemHtml","append","$items","each","Library","getData","editing","selectors","sectionTemplate","renderSidebar","documents","activeID","renderDocument","getActiveDocument","template","sidebarItemTemplate","sidebar","doc","documentEditTemplate","documentTemplate","markdown","documentEditTitle","focus","libraryItem","handleItemClick","createButton","handleCreateClick","saveButton","handleSaveClick","editButton","handleEditClick","cancelButton","handleCancelClick","deleteButton","handleDeleteClick","saveData","confirm","deleteDocument","validateForm","saveDocument","documentEditText","generateID","splice","JSON","validateData","stringify","valid","document","onSortableDrop","container","_super","event","group","draggedClass","removeAttr","bodyClass","saveTodo","items","todoItems","checked","$template","sortable","onDrop","createTodo","clearTodo","bindTodoSave","handleTodoCheckClick","remove","$li","selector","fn"],"mappings":"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","file":"app.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n */\n\n;(function() {\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n  nptable: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  blockquote: /^( *>[^\\n]+(\\n(?!def)[^\\n]+)*\\n*)+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\n  table: noop,\n  paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\n  text: /^[^\\n]+/\n};\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = replace(block.item, 'gm')\n  (/bull/g, block.bullet)\n  ();\n\nblock.list = replace(block.list)\n  (/bull/g, block.bullet)\n  ('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')\n  ('def', '\\\\n+(?=' + block.def.source + ')')\n  ();\n\nblock.blockquote = replace(block.blockquote)\n  ('def', block.def)\n  ();\n\nblock._tag = '(?!(?:'\n  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n  + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\n\nblock.html = replace(block.html)\n  ('comment', /<!--[\\s\\S]*?-->/)\n  ('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n  ('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)\n  (/tag/g, block._tag)\n  ();\n\nblock.paragraph = replace(block.paragraph)\n  ('hr', block.hr)\n  ('heading', block.heading)\n  ('lheading', block.lheading)\n  ('blockquote', block.blockquote)\n  ('tag', '<' + block._tag)\n  ('def', block.def)\n  ();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\s*\\1 *(?:\\n+|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = replace(block.paragraph)\n  ('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  ();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n  table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = {};\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top, bq) {\n  var src = src.replace(/^ +$/gm, '')\n    , next\n    , loose\n    , cap\n    , bull\n    , b\n    , item\n    , space\n    , i\n    , l;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? cap.replace(/\\n+$/, '')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i].split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top, true);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n\n      this.tokens.push({\n        type: 'list_start',\n        ordered: bull.length > 1\n      });\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        this.tokens.push({\n          type: loose\n            ? 'loose_item_start'\n            : 'list_item_start'\n        });\n\n        // Recurse.\n        this.token(item, false, bq);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if ((!bq && top) && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.links[cap[1].toLowerCase()] = {\n        href: cap[2],\n        title: cap[3]\n      };\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i]\n          .replace(/^ *\\| *| *\\| *$/g, '')\n          .split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n  autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\n  url: noop,\n  tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\n  link: /^!?\\[(inside)\\]\\(href\\)/,\n  reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n  nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\n  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n  em: /^\\b_((?:[^_]|__)+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/\n};\n\ninline._inside = /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\ninline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\ninline.link = replace(inline.link)\n  ('inside', inline._inside)\n  ('href', inline._href)\n  ();\n\ninline.reflink = replace(inline.reflink)\n  ('inside', inline._inside)\n  ();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: replace(inline.escape)('])', '~|])')(),\n  url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\n  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n  text: replace(inline.text)\n    (']|', '~]|')\n    ('|', '|https?://|')\n    ()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: replace(inline.br)('{2,}', '*')(),\n  text: replace(inline.gfm.text)('{2,}', '*')()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer;\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new\n      Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  } else if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = ''\n    , link\n    , text\n    , href\n    , cap;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = cap[1].charAt(6) === ':'\n          ? this.mangle(cap[1].substring(7))\n          : this.mangle(cap[1]);\n        href = this.mangle('mailto:') + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      src = src.substring(cap[0].length);\n      text = escape(cap[1]);\n      href = text;\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0]\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      out += this.outputLink(cap, {\n        href: cap[2],\n        title: cap[3]\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2], true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.text(escape(this.smartypants(cap[0])));\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = escape(link.href)\n    , title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = ''\n    , l = text.length\n    , i = 0\n    , ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || {};\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '\\n</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '\\n</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  return '<h'\n    + level\n    + ' id=\"'\n    + this.options.headerPrefix\n    + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n    + '\">'\n    + text\n    + '</h'\n    + level\n    + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered) {\n  var type = ordered ? 'ol' : 'ul';\n  return '<' + type + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + '<tbody>\\n'\n    + body\n    + '</tbody>\\n'\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return '';\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0) {\n      return '';\n    }\n  }\n  var out = '<a href=\"' + href + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer;\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options, renderer) {\n  var parser = new Parser(options, renderer);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options, this.renderer);\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        this.token.text);\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = ''\n        , body = ''\n        , i\n        , row\n        , cell\n        , flags\n        , j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        flags = { header: true, align: this.token.align[i] };\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      var body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      var body = ''\n        , ordered = this.token.ordered;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered);\n    }\n    case 'list_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'loose_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      var html = !this.token.pre && !this.options.pedantic\n        ? this.inline.output(this.token.text)\n        : this.token.text;\n      return this.renderer.html(html);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n\t// explicitly match decimal, hex, and named HTML entities \n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/g, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction replace(regex, opt) {\n  regex = regex.source;\n  opt = opt || '';\n  return function self(name, val) {\n    if (!name) return new RegExp(regex, opt);\n    val = val.source || val;\n    val = val.replace(/(^|[^\\[])\\^/g, '$1');\n    regex = regex.replace(name, val);\n    return self;\n  };\n}\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1\n    , target\n    , key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight\n      , tokens\n      , pending\n      , i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/chjj/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occured:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.defaults = {\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  sanitizer: null,\n  mangle: true,\n  smartLists: false,\n  silent: false,\n  highlight: null,\n  langPrefix: 'lang-',\n  smartypants: false,\n  headerPrefix: '',\n  renderer: new Renderer,\n  xhtml: false\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  this.marked = marked;\n}\n\n}).call(function() {\n  return this || (typeof window !== 'undefined' ? window : global);\n}());\n","module.exports={\r\n    \"CV Travel Prep\": [{\r\n        \"title\": \"CV maintenance checklist\",\r\n        \"description\": \"Go through the CV Maintenance checklist\"\r\n    }, {\r\n        \"title\": \"Stock up on personal supplies\",\r\n        \"description\": \"Make sure you are stocked up on ammo, bandages, food, drill & MT charges supplies.\"\r\n    }],\r\n\r\n    \"CV Maintenance\": [{\r\n        \"title\": \"Check fuel\",\r\n        \"description\": \"Check fuel levels and refill if needed.\"\r\n    }, {\r\n        \"title\": \"Check oxygen\",\r\n        \"description\": \"Check oxygen levels and refill if needed.\"\r\n    }, {\r\n        \"title\": \"Check warp drive tank\",\r\n        \"description\": \"Verify that warp drive tank has enough pentaxit.\"\r\n    }, {\r\n        \"title\": \"Check food supply\",\r\n        \"description\": \"Verify that the fridge contains enough food for the duration of the trip.\"\r\n    }, {\r\n        \"title\": \"Check constructor supplies\",\r\n        \"description\": \"Restock constructor with ingots and materials, if necessary and possible\"\r\n    }]\r\n}","var App = require('./views/App.js');\r\n\r\nnew App();","/**\r\n * Replace template placeholders with data from corresponding object keys\r\n * \r\n * @param {string} html Template html\r\n * @param {object} data An object of data containing keys that correspond with \r\n *                      template placeholders\r\n * @returns {string}    Returns a string of rendered HTML\r\n */\r\nmodule.exports = function(html, data) {\r\n    // iterate through keys in data\r\n    for (var key in data) {\r\n        data[key] = (data[key] === null) ? '' : data[key];\r\n\r\n        // replace occurences of the key with its value\r\n        html = html.replace('{' + key + '}', data[key]);\r\n    }\r\n    \r\n    // return html\r\n    return html;\r\n};","var TodoSectionView = require('./TodoSection'),\r\n    ChecklistsSectionView = require('./ChecklistsSection'),\r\n    LibraryView = require('./Library');\r\n\r\n/**\r\n * A mapping of nav item IDs to the views that correspond with their sections\r\n */\r\nvar navViews = {\r\n    'nav-todo': TodoSectionView,\r\n    'nav-checklists': ChecklistsSectionView,\r\n    'nav-library': LibraryView\r\n};\r\n\r\n/**\r\n * App constructor\r\n */\r\nfunction App() {\r\n    activateLastViewed();\r\n    this.render();\r\n    this.bindEvents(); \r\n    applyBlack();\r\n}\r\n\r\n/**\r\n * Set .active on navigation link that was last visited\r\n * \r\n * The last-visited navigation link is stored in localStorage.\r\n */\r\nfunction activateLastViewed() {\r\n    var lastViewedID = getLastViewed();\r\n    var $lastViewedNav = $('#' + lastViewedID);\r\n\r\n    if (!lastViewedID || !$lastViewedNav.length) {\r\n        return;\r\n    }\r\n\r\n    $('.active').removeClass('active');\r\n    $lastViewedNav.addClass('active');\r\n}\r\n\r\n/**\r\n * Store ID of active nav item in localStorage\r\n */\r\nfunction setLastViewed(id) {\r\n    localStorage.section = id;\r\n}\r\n\r\nfunction getLastViewed() {\r\n    return localStorage.section;\r\n}\r\n\r\n/**\r\n * Apply '.black' class to body if '?black' URL param exists\r\n */\r\nfunction applyBlack() {\r\n    if (window.location.href.indexOf(\"black\") >= 0) {\r\n        $('body').addClass('black');\r\n        $('.navbar-brand').attr('href', 'index.html');\r\n    }\r\n}\r\n\r\n/**\r\n * Register event handlers\r\n */\r\nApp.prototype.bindEvents = function() {    \r\n    // set clicked nav item to active\r\n    $('.nav li[id] a')\r\n        .on('click', this.handleNavClick.bind(this));\r\n};\r\n\r\n/**\r\n * Render the template that corresponds to the active nav item\r\n */\r\nApp.prototype.render = function() {\r\n    $('.content').html(null);\r\n\r\n    var $item = $('.nav .active');\r\n    if (!$item) {\r\n        return false;\r\n    }\r\n\r\n    // get ID of selected nav item and get the view associated with it\r\n    var id = $item.attr('id');\r\n    var view = navViews[id];\r\n\r\n    // return if template doesn't exist or is not mapped to a function\r\n    if (!view || !navViews.hasOwnProperty(id) || typeof navViews[id] !== 'function') {\r\n        console.error('No valid view is associated with nav item ID.');\r\n        return false;\r\n    }\r\n\r\n    // initialize the view\r\n    new view();\r\n\r\n    return true;\r\n};\r\n\r\n/**\r\n * Handle click event of a navbar button\r\n * @param {Event} e     Event object\r\n */\r\nApp.prototype.handleNavClick = function(e) {\r\n    e.preventDefault();\r\n\r\n    $('.nav .active').removeClass('active');\r\n    $(e.target).parents('li').addClass('active');\r\n\r\n    setLastViewed(\r\n        $('.nav .active').attr('id')\r\n    );\r\n\r\n    this.render();\r\n};\r\n\r\nmodule.exports = App;","var renderTemplate = require('../renderTemplate'),\r\n    data = require('../../data/checklists.json');\r\n\r\nfunction View() {\r\n    this.render();\r\n    this.bindEvents();\r\n}\r\n\r\nView.prototype.bindEvents = function() {\r\n    // reset checkboxes and list styles when 'reset' is clicked\r\n    $('.reset')\r\n        .unbind('click')\r\n        .on('click', this.resetList);\r\n\r\n    // apply 'complete' style when a list box is clicked\r\n    $('.list-group-item')\r\n        .unbind('click')\r\n        .on('click', this.completeItem);\r\n\r\n    // don't check checkboxes when clicked because link will handle it\r\n    $('.list-group-item input[type=checkbox]')\r\n        .unbind('click')\r\n        .on('click', function(e) {\r\n            e.preventDefault();\r\n        });\r\n};\r\n\r\n/**\r\n * Toggle styles indicating a completed item when list box is clicked\r\n */\r\nView.prototype.completeItem = function(e) {\r\n    if (e) {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    }\r\n    \r\n    var $input = $(this).find('input');\r\n    var isChecked = $input.prop('checked'); \r\n\r\n    $(this).toggleClass('disabled');\r\n    $input.prop('checked', !isChecked);\r\n};\r\n\r\n/**\r\n * Render checklists from data\r\n */\r\nView.prototype.render = function() {\r\n    var checklistTemplate = $('#checklist-template').html(),\r\n        checklistItemTemplate = $('#checklist-item-template').html(),\r\n        checklistSectionTemplate = $('#checklists-section-template').html();\r\n\r\n    $('.content').html(checklistSectionTemplate);\r\n\r\n    for (var title in data) {\r\n        // create a new element to contain checklist\r\n        var $checklist = $(\r\n            renderTemplate(checklistTemplate, {'title': title})\r\n        );\r\n\r\n        // render template for each item and append to checklist element\r\n        for (var i in data[title]) {\r\n            // set 'number' field in item data\r\n            data[title][i].number = parseInt(i) + 1;\r\n\r\n            var itemHtml = renderTemplate(\r\n                checklistItemTemplate, data[title][i]\r\n            );\r\n\r\n            $checklist.append(\r\n                $(itemHtml)\r\n            );\r\n        }\r\n\r\n        // append checklist element to .checklists element\r\n        $('.checklists').append($checklist);\r\n    }\r\n};\r\n\r\n/**\r\n * Reset checklist items to unchecked\r\n * @param {Event} e\r\n */\r\nView.prototype.resetList = function(e) {\r\n    e.preventDefault();\r\n\r\n    var $items = $(this).parents('.list-group')\r\n        .find('.list-group-item');\r\n\r\n    $items.each(function() {\r\n        $(this).removeClass('disabled');\r\n        $(this).find('input').prop('checked', false);\r\n    });\r\n};\r\n\r\nmodule.exports = View;","var renderTemplate = require('../renderTemplate'),\n    markdown = require('marked');\n\n/**\n * Key used when accessing localStorage\n */\nvar key = 'library';\n\n/**\n * Element selectors\n */\nvar selectors = {\n    sidebar: '.library-sidebar',\n    sidebarItemTemplate: '#library-sidebar-item-template',\n    content: '.library-content',\n    sectionTemplate: '#library-section-template',\n    documentTemplate: '#library-document-template',\n    documentEditTemplate: '#library-document-edit-template',\n    documentEditTitle: '.library-document-edit-title',\n    documentEditText: '.library-document-edit-text',\n    libraryItem: '.library-item',\n    createButton: '.library .create-item',\n    saveButton: '.library button[type=submit]',\n    cancelButton: '.library-document-cancel',\n    editButton: '.library-document-edit',\n    deleteButton: '.library-document-delete'\n};\n\n/**\n * Library construtor\n */\nfunction Library() {\n    this.data = getData();\n    this.editing = false;\n\n    render.bind(this)();\n}\n\n/**\n * Render the Library template. \n * Note: This function must called as a bound function.\n */\nfunction render() {\n    // render main template\n    $('.content').html(\n        $(selectors.sectionTemplate).html()\n    );\n\n    // append documents to sidebar\n    renderSidebar(\n        this.data.documents,\n        this.data.activeID\n    );\n\n    // render the active document\n    renderDocument(\n        getActiveDocument.bind(this)(),\n        this.editing\n    );\n\n    // bind events\n    bindEvents.bind(this)();\n}\n\n/**\n * Render the library sidebar\n * @param {array} documents An array of objects representing documents\n * @param {int} activeID    ID of the document to mark as active\n */\nfunction renderSidebar(documents, activeID) {\n    documents = documents || [];\n\n    // get the sidebar item template HTML\n    var template = $(selectors.sidebarItemTemplate).html();\n\n    // iterate through documents\n    for (var i=0; i<documents.length; i++) {\n        // render item template using document data\n        var $item = $(\n            renderTemplate(template, documents[i])\n        );\n\n        // if activeID matches document ID, add 'active' class to element\n        if (activeID === documents[i].id) {\n            $item.addClass('active');\n        }\n\n        // append element to sidebar\n        $(selectors.sidebar).append($item);\n    }\n}\n\n/**\n * Render a library item to view\n * @param {object} doc      (Optional) An object of document data.\n * @param {bool} editing    (Optional) If true, the document edit form is rendered. Defaults to false.\n */\nfunction renderDocument(doc, editing) {\n    editing = (editing !== null) ? editing : false;\n\n    if (!editing && !doc) {\n        return;\n    }\n\n    var template = (editing) ? $(selectors.documentEditTemplate).html() : $(selectors.documentTemplate).html();\n\n    // render document template or edit template\n    $(selectors.content).html(renderTemplate(template, {\n        title: (!doc) ? null : doc.title,\n        content: (!doc) ? null : markdown(doc.text),\n        text: (!doc) ? null : doc.text\n    }));\n\n    if (editing) {\n        $(selectors.documentEditTitle).focus();\n    }\n}\n\n/**\n * Register event handlers\n * Note: This function must called as a bound function.\n */\nfunction bindEvents() {\n    $(selectors.libraryItem)\n        .unbind('click')\n        .on('click', handleItemClick.bind(this));\n\n    $(selectors.createButton)\n        .unbind('click')\n        .on('click', handleCreateClick.bind(this));\n\n    $(selectors.saveButton)\n        .unbind('click')\n        .on('click', handleSaveClick.bind(this));\n\n    $(selectors.editButton)\n        .unbind('click')\n        .on('click', handleEditClick.bind(this));\n\n    $(selectors.cancelButton)\n        .unbind('click')\n        .on('click', handleCancelClick.bind(this));\n\n    $(selectors.deleteButton)\n        .unbind('click')\n        .on('click', handleDeleteClick.bind(this));\n}\n\n/**\n * Handle click event of library item click\n * Note: This function must called as a bound function.\n * @param {event} e\n */\nfunction handleItemClick(e) {\n    e.preventDefault();\n\n    var id = $(e.target).data('document-id');\n\n    if (!id) {\n        console.error('No document is associated with library item\\'s ID.');\n        return;\n    }\n\n    this.data.activeID = parseInt(id);\n    this.editing = false;\n    saveData.bind(this)();\n\n    render.bind(this)();\n}\n\n/**\n * Handle 'Create new document...' click. \n * Note: This function must called as a bound function.\n * @param {Event} e\n */\nfunction handleCreateClick(e) {\n    e.preventDefault();\n\n    this.editing = true;\n    this.data.activeID = null;\n\n    render.bind(this)();\n}\n\nfunction handleEditClick(e) {\n    this.editing = true;\n    render.bind(this)();\n}\n\nfunction handleDeleteClick(e) {\n    if (!window.confirm('Delete document \"' + getActiveDocument.bind(this)().title + '\"?')) {\n        return;\n    }\n\n    deleteDocument.bind(this)(this.data.activeID);\n    render.bind(this)();\n}\n\nfunction handleSaveClick(e) {\n    e.preventDefault();\n\n    // validate form\n    if (!validateForm()) {\n        return;\n    }\n\n    var id = saveDocument.bind(this)(\n        this.data.activeID,\n        $(selectors.documentEditTitle).val(),\n        $(selectors.documentEditText).val()\n    );\n\n    this.data.activeID = id;\n    this.editing = false;\n\n    render.bind(this)();\n}\n\nfunction handleCancelClick(e) {\n    this.editing = false;\n\n    render.bind(this)();\n}\n\nfunction saveDocument(id, title, text) {\n    if (!id) {\n        id = this.data.activeID = generateID();\n        \n        // append the object to this.data\n        this.data.documents.push({\n            id: id,\n            title: title,\n            text: text\n        });\n    } else {\n        // iterate through each document\n        for (var i=0; i<this.data.documents.length; i++) {\n            // if ID matches id parameter, update document data\n            if (id === this.data.documents[i].id) {\n                this.data.documents[i].title = title;\n                this.data.documents[i].text = text;\n                break;\n            }\n        }\n    }\n\n    saveData.bind(this)();\n    return id;\n}\n\nfunction deleteDocument(id) {\n    // iterate through documents\n    for (var i=0; i<this.data.documents.length; i++) {\n        // if id matches current document's ID, splice it from the array\n        if (id === this.data.documents[i].id) {\n            this.data.documents.splice(i, 1);\n            break;\n        }\n    }\n        \n    // if activeID is set to id, nullify activeID\n    this.data.activeID = (this.data.activeID === id) ? null : this.data.activeID;\n\n    saveData.bind(this)();\n}\n\n/**\n * Return library data from localStorage\n * @return {object} Returns an object containing library data\n */\nfunction getData() {\n    if (!localStorage[key] || localStorage[key] === \"null\") {\n        return {\n            documents: [],\n            activeID: null\n        };\n    }\n\n    return JSON.parse(localStorage[key]);\n}\n\nfunction saveData() {\n    // make sure data is in a valid format\n    if (!validateData(this.data)) {\n        console.error(\"Failed to save data. Data is in an invalid format.\");\n        return false;\n    }\n\n    localStorage[key] = JSON.stringify(this.data);\n\n    return true;\n}\n\nfunction validateData(data) {\n    // todo: implement this\n    // iterate throgh object properties\n    // if object doesn't contain 'id', 'title', and 'text' properties, return false\n    // return true\n    return true;\n}\n\nfunction validateForm() {\n    var valid = true;\n\n    $('.invalid').removeClass('invalid');\n    \n    // iterate through each\n    $('[required]').each(function() {\n        // apply 'invalid' class if it has no value\n        if ($(this).val() === '') {\n            $(this).addClass('invalid').attr('placeholder', 'Required').focus();\n            valid = false;\n        }\n    });\n    \n    return valid;\n}\n\nfunction getActiveDocument() {\n    if (!this.data.activeID) {\n        return null;\n    }\n\n    for (var i=0; i<this.data.documents.length; i++) {\n        var document = this.data.documents[i];\n        if (document.id === this.data.activeID) {\n            return document;\n        }\n    }\n    \n    return null;\n}\n\nfunction generateID() {\n    return Math.random() * 100000000000000000;\n}\n\nmodule.exports = Library;","/**\r\n * Construct the view\r\n */\r\nfunction View() {\r\n    render.bind(this)();\r\n    this.bindEvents();\r\n}\r\n\r\nfunction onSortableDrop ($item, container, _super, event) {\r\n    $item.removeClass(container.group.options.draggedClass).removeAttr(\"style\");\r\n    $(\"body\").removeClass(container.group.options.bodyClass);\r\n    \r\n    this.saveTodo();\r\n}\r\n\r\n/**\r\n * Render the view\r\n */\r\nfunction render() {\r\n    var sectionTemplate = $('#todo-section-template').html();\r\n    var template = $('#todo-template').html();\r\n\r\n    // render section to .content div\r\n    $('.content').html(sectionTemplate);\r\n\r\n    // fetch or create todoItems from localStorage\r\n    var items = localStorage.todoItems;\r\n\r\n    if (!items) {\r\n        return;\r\n    }\r\n\r\n    items = JSON.parse(items);\r\n\r\n    // iterate through array items\r\n    for (var i = 0; i < items.length; i++) {\r\n        if (typeof items[i].checked === 'undefined' || typeof items[i].text === 'undefined') {\r\n            continue;\r\n        }\r\n\r\n        var $template = $(template);\r\n\r\n        // set element text to todo text\r\n        $template.find('input[type=text]').val(items[i].text);\r\n\r\n        if (items[i].checked) {\r\n            $template.find('input[type=checkbox]').prop('checked', true);\r\n            $template.addClass('complete');\r\n        }\r\n\r\n        $('.todo-list').append($template);\r\n\r\n        $('.todo-list').sortable({\r\n            onDrop: onSortableDrop.bind(this)\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * Register event handlers\r\n */\r\nView.prototype.bindEvents = function() {\r\n    // create new todo item element when link is clicked\r\n    $('#create-todo')\r\n        .unbind('click')\r\n        .on('click', this.createTodo.bind(this));\r\n\r\n    // remove completed todo items when link is clicked\r\n    $('#clear-todo')\r\n        .unbind('click')\r\n        .on('click', this.clearTodo.bind(this));\r\n\r\n    // save todo data when a todo item is changed\r\n    this.bindTodoSave('.todo .input-group input[type=text]', this.saveTodo);\r\n\r\n    // toggle 'complete' class on li of todo item that was checked/unchecked\r\n    $('.todo-list input[type=checkbox]')\r\n        .unbind('change')\r\n        .on('change', this.handleTodoCheckClick)\r\n        .on('change', this.saveTodo);\r\n};\r\n\r\n/**\r\n * Append a new todo item element to the list\r\n * @param {Event} e\r\n */\r\nView.prototype.createTodo = function(e) {\r\n    e.preventDefault();\r\n        \r\n    var $item = $($('#todo-template').html());\r\n\r\n    $('.todo-list').append($item);\r\n    $item.find('input[type=text]').focus();\r\n\r\n    this.bindTodoSave('.todo .input-group input', this.saveTodo);\r\n\r\n    $('.todo-list input[type=checkbox]').on('change', this.handleTodoCheckClick);\r\n};\r\n\r\n/**\r\n * Clear completed todo items\r\n * @param {Event} e\r\n */\r\nView.prototype.clearTodo = function(e) {\r\n    e.preventDefault();\r\n\r\n    var $items = $(e.target).parents('.todo').find('.input-group');\r\n\r\n    $items.each(function() {\r\n        if ($(this).find('input').prop('checked')) {\r\n            $(this).remove();\r\n        }\r\n    });\r\n\r\n    this.saveTodo();\r\n};\r\n\r\n/**\r\n * Handle click event of a todo item check/uncheck\r\n * @param {Event} e     Event object\r\n */\r\nView.prototype.handleTodoCheckClick = function(e) {\r\n    var $li = $(e.target).parents('li');\r\n\r\n    // if input is checked, add 'complete' class to li\r\n    if ($(e.target).prop('checked')) {\r\n        $li.addClass('complete');\r\n        return;\r\n    }\r\n\r\n    // otherwise remove 'complete' from the li\r\n    $li.removeClass('complete');\r\n};\r\n\r\n/**\r\n * Bind change event to save method for specific selector\r\n */\r\nView.prototype.bindTodoSave = function(selector, fn) {\r\n    $(selector)\r\n        .unbind('change keyup')\r\n        .on('change keyup', fn);\r\n};\r\n\r\n/**\r\n * Save todo item data to localStorage\r\n */\r\nView.prototype.saveTodo = function() {\r\n    var items = [];\r\n\r\n    // iterate through todo items\r\n    var $items = $('.todo .input-group');\r\n\r\n    $items.each(function() {\r\n        // get text\r\n        var text = $(this).find('input[type=text]').val();\r\n        \r\n        var item = {\r\n            checked: $(this).find('input[type=checkbox]').prop('checked'),\r\n            text: text\r\n        };\r\n\r\n        // append to array\r\n        items.push(item);\r\n    });\r\n    \r\n    // serialize array and write to localStorage\r\n    localStorage.todoItems = JSON.stringify(items);\r\n};\r\n\r\nmodule.exports = View;"]}