{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","resources/data/checklists.json","resources/js/app.js","resources/js/renderTemplate.js","resources/js/views/App.js","resources/js/views/ChecklistsSection.js","resources/js/views/Library.js","resources/js/views/TodoSection.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","CV Travel Prep","title","description","CV Maintenance","App","html","data","key","replace","activateLastViewed","this","render","bindEvents","applyBlack","lastViewedID","getLastViewed","$lastViewedNav","$","removeClass","addClass","setLastViewed","id","localStorage","section","TodoSectionView","ChecklistsSectionView","LibraryView","navViews","nav-todo","nav-checklists","nav-library","prototype","window","location","href","indexOf","on","handleNavClick","bind","$item","attr","view","hasOwnProperty","console","error","preventDefault","target","parents","View","renderTemplate","unbind","resetList","completeItem","stopPropagation","$input","find","isChecked","prop","toggleClass","checklistTemplate","checklistItemTemplate","checklistSectionTemplate","$checklist","number","parseInt","itemHtml","append","$items","each","Library","onSortableDrop","container","_super","event","group","options","draggedClass","removeAttr","bodyClass","saveTodo","sectionTemplate","template","items","todoItems","JSON","parse","checked","text","$template","val","sortable","onDrop","createTodo","clearTodo","bindTodoSave","handleTodoCheckClick","focus","remove","$li","selector","fn","item","push","stringify"],"mappings":"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","file":"app.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports={\r\n    \"CV Travel Prep\": [{\r\n        \"title\": \"CV maintenance checklist\",\r\n        \"description\": \"Go through the CV Maintenance checklist\"\r\n    }, {\r\n        \"title\": \"Stock up on personal supplies\",\r\n        \"description\": \"Make sure you are stocked up on ammo, bandages, food, drill & MT charges supplies.\"\r\n    }],\r\n\r\n    \"CV Maintenance\": [{\r\n        \"title\": \"Check fuel\",\r\n        \"description\": \"Check fuel levels and refill if needed.\"\r\n    }, {\r\n        \"title\": \"Check oxygen\",\r\n        \"description\": \"Check oxygen levels and refill if needed.\"\r\n    }, {\r\n        \"title\": \"Check warp drive tank\",\r\n        \"description\": \"Verify that warp drive tank has enough pentaxit.\"\r\n    }, {\r\n        \"title\": \"Check food supply\",\r\n        \"description\": \"Verify that the fridge contains enough food for the duration of the trip.\"\r\n    }, {\r\n        \"title\": \"Check constructor supplies\",\r\n        \"description\": \"Restock constructor with ingots and materials, if necessary and possible\"\r\n    }]\r\n}","var App = require('./views/App.js');\r\n\r\nnew App();","/**\r\n * Replace template placeholders with data from corresponding object keys\r\n * \r\n * @param {string} html Template html\r\n * @param {object} data An object of data containing keys that correspond with \r\n *                      template placeholders\r\n * @returns {string}    Returns a string of rendered HTML\r\n */\r\nmodule.exports = function(html, data) {\r\n    // iterate through keys in data\r\n    for (var key in data) {\r\n        // replace occurences of the key with its value\r\n        html = html.replace('{' + key + '}', data[key]);\r\n    }\r\n    \r\n    // return html\r\n    return html;\r\n};","var TodoSectionView = require('./TodoSection'),\r\n    ChecklistsSectionView = require('./ChecklistsSection'),\r\n    LibraryView = require('./Library');\r\n\r\n/**\r\n * A mapping of nav item IDs to the views that correspond with their sections\r\n */\r\nvar navViews = {\r\n    'nav-todo': TodoSectionView,\r\n    'nav-checklists': ChecklistsSectionView,\r\n    'nav-library': LibraryView\r\n};\r\n\r\n/**\r\n * App constructor\r\n */\r\nfunction App() {\r\n    activateLastViewed();\r\n    this.render();\r\n    this.bindEvents(); \r\n    this.applyBlack();\r\n}\r\n\r\n/**\r\n * Set .active on navigation link that was last visited\r\n * \r\n * The last-visited navigation link is stored in localStorage.\r\n */\r\nfunction activateLastViewed() {\r\n    var lastViewedID = getLastViewed();\r\n    var $lastViewedNav = $('#' + lastViewedID);\r\n\r\n    if (!lastViewedID || !$lastViewedNav.length) {\r\n        return;\r\n    }\r\n\r\n    $('.active').removeClass('active');\r\n    $lastViewedNav.addClass('active');\r\n}\r\n\r\n/**\r\n * Store ID of active nav item in localStorage\r\n */\r\nfunction setLastViewed(id) {\r\n    localStorage.section = id;\r\n}\r\n\r\nfunction getLastViewed() {\r\n    return localStorage.section;\r\n}\r\n\r\n/**\r\n * Apply '.black' class to body if '?black' URL param exists\r\n */\r\nApp.prototype.applyBlack = function() {\r\n    if (window.location.href.indexOf(\"black\") >= 0) {\r\n        $('body').addClass('black');\r\n    }\r\n};\r\n\r\n/**\r\n * Register event handlers\r\n */\r\nApp.prototype.bindEvents = function() {    \r\n    // set clicked nav item to active\r\n    $('.nav li[id] a')\r\n        .on('click', this.handleNavClick.bind(this));\r\n};\r\n\r\n/**\r\n * Render the template that corresponds to the active nav item\r\n */\r\nApp.prototype.render = function() {\r\n    $('.content').html(null);\r\n\r\n    var $item = $('.nav .active');\r\n    if (!$item) {\r\n        return false;\r\n    }\r\n\r\n    // get ID of selected nav item and get the view associated with it\r\n    var id = $item.attr('id');\r\n    var view = navViews[id];\r\n\r\n    // return if template doesn't exist or is not mapped to a function\r\n    if (!view || !navViews.hasOwnProperty(id) || typeof navViews[id] !== 'function') {\r\n        console.error('No valid view is associated with nav item ID.');\r\n        return false;\r\n    }\r\n\r\n    // initialize the view\r\n    new view();\r\n\r\n    return true;\r\n};\r\n\r\n/**\r\n * Handle click event of a navbar button\r\n * @param {Event} e     Event object\r\n */\r\nApp.prototype.handleNavClick = function(e) {\r\n    e.preventDefault();\r\n\r\n    $('.nav .active').removeClass('active');\r\n    $(e.target).parents('li').addClass('active');\r\n\r\n    setLastViewed(\r\n        $('.nav .active').attr('id')\r\n    );\r\n\r\n    this.render();\r\n};\r\n\r\nmodule.exports = App;","var renderTemplate = require('../renderTemplate'),\r\n    data = require('../../data/checklists.json');\r\n\r\nfunction View() {\r\n    this.render();\r\n    this.bindEvents();\r\n}\r\n\r\nView.prototype.bindEvents = function() {\r\n    // reset checkboxes and list styles when 'reset' is clicked\r\n    $('.reset')\r\n        .unbind('click')\r\n        .on('click', this.resetList);\r\n\r\n    // apply 'complete' style when a list box is clicked\r\n    $('.list-group-item')\r\n        .unbind('click')\r\n        .on('click', this.completeItem);\r\n\r\n    // don't check checkboxes when clicked because link will handle it\r\n    $('.list-group-item input[type=checkbox]')\r\n        .unbind('click')\r\n        .on('click', function(e) {\r\n            e.preventDefault();\r\n        });\r\n};\r\n\r\n/**\r\n * Toggle styles indicating a completed item when list box is clicked\r\n */\r\nView.prototype.completeItem = function(e) {\r\n    if (e) {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    }\r\n    \r\n    var $input = $(this).find('input');\r\n    var isChecked = $input.prop('checked'); \r\n\r\n    $(this).toggleClass('disabled');\r\n    $input.prop('checked', !isChecked);\r\n};\r\n\r\n/**\r\n * Render checklists from data\r\n */\r\nView.prototype.render = function() {\r\n    var checklistTemplate = $('#checklist-template').html(),\r\n        checklistItemTemplate = $('#checklist-item-template').html(),\r\n        checklistSectionTemplate = $('#checklists-section-template').html();\r\n\r\n    $('.content').html(checklistSectionTemplate);\r\n\r\n    for (var title in data) {\r\n        // create a new element to contain checklist\r\n        var $checklist = $(\r\n            renderTemplate(checklistTemplate, {'title': title})\r\n        );\r\n\r\n        // render template for each item and append to checklist element\r\n        for (var i in data[title]) {\r\n            // set 'number' field in item data\r\n            data[title][i].number = parseInt(i) + 1;\r\n\r\n            var itemHtml = renderTemplate(\r\n                checklistItemTemplate, data[title][i]\r\n            );\r\n\r\n            $checklist.append(\r\n                $(itemHtml)\r\n            );\r\n        }\r\n\r\n        // append checklist element to .checklists element\r\n        $('.checklists').append($checklist);\r\n    }\r\n};\r\n\r\n/**\r\n * Reset checklist items to unchecked\r\n * @param {Event} e\r\n */\r\nView.prototype.resetList = function(e) {\r\n    e.preventDefault();\r\n\r\n    var $items = $(this).parents('.list-group')\r\n        .find('.list-group-item');\r\n\r\n    $items.each(function() {\r\n        $(this).removeClass('disabled');\r\n        $(this).find('input').prop('checked', false);\r\n    });\r\n};\r\n\r\nmodule.exports = View;","var renderTemplate = require('../renderTemplate');\r\n\r\n/**\r\n * Library construtor\r\n */\r\nfunction Library() {\r\n    render();\r\n    bindEvents();\r\n}\r\n\r\n/**\r\n * Render the template\r\n * \r\n * @param {object} data Data when rendering the template\r\n */\r\nfunction render(data) {\r\n    data = data || {};\r\n    \r\n    $('.content').html(\r\n        renderTemplate($('#library-section-template').html(), data)\r\n    );\r\n}\r\n\r\nfunction bindEvents() {\r\n\r\n}\r\n\r\nmodule.exports = Library;","/**\r\n * Construct the view\r\n */\r\nfunction View() {\r\n    render();\r\n    this.bindEvents();\r\n}\r\n\r\nfunction onSortableDrop ($item, container, _super, event) {\r\n    $item.removeClass(container.group.options.draggedClass).removeAttr(\"style\");\r\n    $(\"body\").removeClass(container.group.options.bodyClass);\r\n    \r\n    this.saveTodo();\r\n}\r\n\r\n/**\r\n * Render the view\r\n */\r\nfunction render() {\r\n    var sectionTemplate = $('#todo-section-template').html();\r\n    var template = $('#todo-template').html();\r\n\r\n    // render section to .content div\r\n    $('.content').html(sectionTemplate);\r\n\r\n    // fetch or create todoItems from localStorage\r\n    var items = localStorage.todoItems;\r\n\r\n    if (!items) {\r\n        return;\r\n    }\r\n\r\n    items = JSON.parse(items);\r\n\r\n    // iterate through array items\r\n    for (var i = 0; i < items.length; i++) {\r\n        if (typeof items[i].checked === 'undefined' || typeof items[i].text === 'undefined') {\r\n            continue;\r\n        }\r\n\r\n        var $template = $(template);\r\n\r\n        // set element text to todo text\r\n        $template.find('input[type=text]').val(items[i].text);\r\n\r\n        if (items[i].checked) {\r\n            $template.find('input[type=checkbox]').prop('checked', true);\r\n            $template.addClass('complete');\r\n        }\r\n\r\n        $('.todo-list').append($template);\r\n\r\n        $('.todo-list').sortable({\r\n            onDrop: onSortableDrop.bind(this)\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * Register event handlers\r\n */\r\nView.prototype.bindEvents = function() {\r\n    // create new todo item element when link is clicked\r\n    $('#create-todo')\r\n        .unbind('click')\r\n        .on('click', this.createTodo.bind(this));\r\n\r\n    // remove completed todo items when link is clicked\r\n    $('#clear-todo')\r\n        .unbind('click')\r\n        .on('click', this.clearTodo.bind(this));\r\n\r\n    // save todo data when a todo item is changed\r\n    this.bindTodoSave('.todo .input-group input[type=text]', this.saveTodo);\r\n\r\n    // toggle 'complete' class on li of todo item that was checked/unchecked\r\n    $('.todo-list input[type=checkbox]')\r\n        .unbind('change')\r\n        .on('change', this.handleTodoCheckClick)\r\n        .on('change', this.saveTodo);\r\n};\r\n\r\n/**\r\n * Append a new todo item element to the list\r\n * @param {Event} e\r\n */\r\nView.prototype.createTodo = function(e) {\r\n    e.preventDefault();\r\n        \r\n    var $item = $($('#todo-template').html());\r\n\r\n    $('.todo-list').append($item);\r\n    $item.find('input[type=text]').focus();\r\n\r\n    this.bindTodoSave('.todo .input-group input', this.saveTodo);\r\n\r\n    $('.todo-list input[type=checkbox]').on('change', this.handleTodoCheckClick);\r\n};\r\n\r\n/**\r\n * Clear completed todo items\r\n * @param {Event} e\r\n */\r\nView.prototype.clearTodo = function(e) {\r\n    e.preventDefault();\r\n\r\n    var $items = $(e.target).parents('.todo').find('.input-group');\r\n\r\n    $items.each(function() {\r\n        if ($(this).find('input').prop('checked')) {\r\n            $(this).remove();\r\n        }\r\n    });\r\n\r\n    this.saveTodo();\r\n};\r\n\r\n/**\r\n * Handle click event of a todo item check/uncheck\r\n * @param {Event} e     Event object\r\n */\r\nView.prototype.handleTodoCheckClick = function(e) {\r\n    var $li = $(e.target).parents('li');\r\n\r\n    // if input is checked, add 'complete' class to li\r\n    if ($(e.target).prop('checked')) {\r\n        $li.addClass('complete');\r\n        return;\r\n    }\r\n\r\n    // otherwise remove 'complete' from the li\r\n    $li.removeClass('complete');\r\n};\r\n\r\n/**\r\n * Bind change event to save method for specific selector\r\n */\r\nView.prototype.bindTodoSave = function(selector, fn) {\r\n    $(selector)\r\n        .unbind('change keyup')\r\n        .on('change keyup', fn);\r\n};\r\n\r\n/**\r\n * Save todo item data to localStorage\r\n */\r\nView.prototype.saveTodo = function() {\r\n    var items = [];\r\n\r\n    // iterate through todo items\r\n    var $items = $('.todo .input-group');\r\n\r\n    $items.each(function() {\r\n        // get text\r\n        var text = $(this).find('input[type=text]').val();\r\n        \r\n        var item = {\r\n            checked: $(this).find('input[type=checkbox]').prop('checked'),\r\n            text: text\r\n        };\r\n\r\n        // append to array\r\n        items.push(item);\r\n    });\r\n    \r\n    // serialize array and write to localStorage\r\n    localStorage.todoItems = JSON.stringify(items);\r\n};\r\n\r\nmodule.exports = View;"]}