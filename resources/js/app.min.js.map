{"version":3,"sources":["node_modules/browser-pack/_prelude.js","resources/data/checklists.json","resources/js/app.js","resources/js/renderTemplate.js","resources/js/views/App.js","resources/js/views/ChecklistsSection.js","resources/js/views/TodoSection.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","Interplanetary Travel","title","description","App","html","data","key","replace","this","render","bindEvents","TodoSectionView","ChecklistsSectionView","navViews","nav-todo","nav-checklists","prototype","$","unbind","on","handleNavClick","bind","$item","id","attr","view","hasOwnProperty","console","error","preventDefault","removeClass","target","parents","addClass","View","renderTemplate","resetList","completeItem","stopPropagation","$input","find","isChecked","prop","toggleClass","checklistTemplate","checklistItemTemplate","checklistSectionTemplate","$checklist","number","parseInt","itemHtml","append","$items","each","sectionTemplate","template","items","localStorage","todoItems","JSON","parse","checked","text","$template","val","sortable","onDrop","container","_super","event","group","options","draggedClass","removeAttr","bodyClass","saveTodo","createTodo","clearTodo","bindTodoSave","handleTodoCheckClick","focus","remove","$li","selector","fn","item","push","stringify"],"mappings":"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","file":"app.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports={\n    \"Interplanetary Travel\": [{\n        \"title\": \"Gather supplies\",\n        \"description\": \"Stock up on fuel, ammo, food, and oxygen.\"\n    }, {\n        \"title\": \"Stock ship\",\n        \"description\": \"Fill ship O2, fuel, and food supplies.\"\n    }]\n}","var App = require('./views/App.js');\n\nnew App();","/**\n * Replace template placeholders with data from corresponding object keys\n * \n * @param {string} html Template html\n * @param {object} data An object of data containing keys that correspond with \n *                      template placeholders\n * @returns {string}    Returns a string of rendered HTML\n */\nmodule.exports = function(html, data) {\n    // iterate through keys in data\n    for (var key in data) {\n        // replace occurences of the key with its value\n        html = html.replace('{' + key + '}', data[key]);\n    }\n    \n    // return html\n    return html;\n}","'use strict';\n\nvar TodoSectionView = require('./TodoSection'),\n    ChecklistsSectionView = require('./ChecklistsSection');\n\n/**\n * A mapping of nav item IDs to the views that correspond with their sections\n */\nvar navViews = {\n    'nav-todo': TodoSectionView,\n    'nav-checklists': ChecklistsSectionView\n};\n\n/**\n * App constructor\n */\nfunction App() {\n    this.render();\n    this.bindEvents();\n}\n\n/**\n * Register event handlers\n */\nApp.prototype.bindEvents = function() {\n    // set clicked nav item to active\n    $('.nav a')\n        .unbind('click')\n        .on('click', this.handleNavClick.bind(this));\n};\n\n/**\n * Render the template that corresponds to the active nav item\n */\nApp.prototype.render = function() {\n    $('.content').html(null);\n\n    var $item = $('.nav .active');\n\n    if (!$item) {\n        return false;\n    }\n\n    var id = $item.attr('id');\n    var view = navViews[id];\n\n    // return if template doesn't exist or is not mapped to a function\n    if (!view || !navViews.hasOwnProperty(id) || typeof navViews[id] !== 'function') {\n        console.error('No valid view is associated with nav item ID.');\n        return false;\n    }\n\n    // initialize the view\n    new view();\n\n    return true;\n};\n\n/**\n * Handle click event of a navbar button\n * @param {Event} e     Event object\n */\nApp.prototype.handleNavClick = function(e) {\n    e.preventDefault();\n\n    $('.nav .active').removeClass('active');\n    $(e.target).parents('li').addClass('active');\n\n    this.render();\n};\n\nmodule.exports = App;","'use strict';\n\nvar renderTemplate = require('../renderTemplate'),\n    data = require('../../data/checklists.json');\n\nfunction View() {\n    this.render();\n    this.bindEvents();\n}\n\nView.prototype.bindEvents = function() {\n    // reset checkboxes and list styles when 'reset' is clicked\n    $('.reset')\n        .unbind('click')\n        .on('click', this.resetList);\n\n    // apply 'complete' style when a list box is clicked\n    $('.list-group-item')\n        .unbind('click')\n        .on('click', this.completeItem);\n\n    // don't check checkboxes when clicked because link will handle it\n    $('.list-group-item input[type=checkbox]')\n        .unbind('click')\n        .on('click', function(e) {\n            e.preventDefault();\n        });\n};\n\n/**\n * Toggle styles indicating a completed item when list box is clicked\n */\nView.prototype.completeItem = function(e) {\n    if (e) {\n        e.stopPropagation();\n    }\n    \n    var $input = $(this).find('input');\n    var isChecked = $input.prop('checked'); \n\n    $(this).toggleClass('disabled');\n    $input.prop('checked', !isChecked);\n}\n\n/**\n * Render checklists from data\n */\nView.prototype.render = function() {\n    var checklistTemplate = $('#checklist-template').html(),\n        checklistItemTemplate = $('#checklist-item-template').html(),\n        checklistSectionTemplate = $('#checklists-section-template').html();\n\n    $('.content').html(checklistSectionTemplate);\n\n    for (var title in data) {\n        // create a new element to contain checklist\n        var $checklist = $(\n            renderTemplate(checklistTemplate, {'title': title})\n        );\n\n        // render template for each item and append to checklist element\n        for (var i in data[title]) {\n            // set 'number' field in item data\n            data[title][i].number = parseInt(i) + 1;\n\n            var itemHtml = renderTemplate(\n                checklistItemTemplate, data[title][i]\n            );\n\n            $checklist.append(\n                $(itemHtml)\n            );\n        }\n\n        // append checklist element to .checklists element\n        $('.checklists').append($checklist);\n    }\n}\n\n/**\n * Reset checklist items to unchecked\n * @param {Event} e\n */\nView.prototype.resetList = function(e) {\n    e.preventDefault();\n\n    var $items = $(this).parents('.list-group')\n        .find('.list-group-item');\n\n    $items.each(function() {\n        $(this).removeClass('disabled');\n        $(this).find('input').prop('checked', false);\n    });\n}\n\nmodule.exports = View;","'use strict';\n\n/**\n * Construct the view\n */\nfunction View() {\n    this.render();\n    this.bindEvents();\n}\n\n/**\n * Render the view\n */\nView.prototype.render = function() {\n    var sectionTemplate = $('#todo-section-template').html();\n    var template = $('#todo-template').html();\n\n    // render section to .content div\n    $('.content').html(sectionTemplate);\n\n    // fetch or create todoItems from localStorage\n    var items = localStorage.todoItems;\n\n    if (!items) {\n        return;\n    }\n\n    items = JSON.parse(items);\n\n    // iterate through array items\n    for (var i = 0; i < items.length; i++) {\n        if (typeof items[i].checked === 'undefined' || typeof items[i].text === 'undefined') {\n            continue;\n        }\n\n        var $template = $(template);\n\n        // set element text to todo text\n        $template.find('input[type=text]').val(items[i].text);\n\n        if (items[i].checked) {\n            $template.find('input[type=checkbox]').prop('checked', true);\n            $template.addClass('complete');\n        }\n\n        $('.todo-list').append($template);\n\n        $('.todo-list').sortable({\n            onDrop: function ($item, container, _super, event) {\n                $item.removeClass(container.group.options.draggedClass).removeAttr(\"style\");\n                $(\"body\").removeClass(container.group.options.bodyClass);\n                \n                this.saveTodo();\n            }.bind(this)\n        });\n    }\n};\n\n/**\n * Register event handlers\n */\nView.prototype.bindEvents = function() {\n    // create new todo item element when link is clicked\n    $('#create-todo')\n        .unbind('click')\n        .on('click', this.createTodo.bind(this));\n\n    // remove completed todo items when link is clicked\n    $('#clear-todo')\n        .unbind('click')\n        .on('click', this.clearTodo.bind(this));\n\n    // save todo data when a todo item is changed\n    this.bindTodoSave('.todo .input-group input', this.saveTodo);\n\n    // toggle 'complete' class on li of todo item that was checked/unchecked\n    $('.todo-list input[type=checkbox]')\n        .unbind('change')\n        .on('change', this.handleTodoCheckClick);\n}\n\n/**\n * Append a new todo item element to the list\n * @param {Event} e\n */\nView.prototype.createTodo = function(e) {\n    e.preventDefault();\n        \n    var $item = $($('#todo-template').html());\n\n    $('.todo-list').append($item);\n    $item.find('input[type=text]').focus();\n\n    this.bindTodoSave('.todo .input-group input', this.saveTodo);\n\n    $('.todo-list input[type=checkbox]').on('change', this.handleTodoCheckClick);\n};\n\n/**\n * Clear completed todo items\n * @param {Event} e\n */\nView.prototype.clearTodo = function(e) {\n    e.preventDefault();\n\n    var $items = $(e.target).parents('.todo').find('.input-group');\n\n    $items.each(function() {\n        if ($(this).find('input').prop('checked')) {\n            $(this).remove();\n        }\n    });\n\n    this.saveTodo();\n};\n\n/**\n * Handle click event of a todo item check/uncheck\n * @param {Event} e     Event object\n */\nView.prototype.handleTodoCheckClick = function(e) {\n    var $li = $(e.target).parents('li');\n\n    // if input is checked, add 'complete' class to li\n    if ($(e.target).prop('checked')) {\n        $li.addClass('complete');\n        return;\n    }\n\n    // otherwise remove 'complete' from the li\n    $li.removeClass('complete');    \n};\n\n/**\n * Bind change event to save method for specific selector\n */\nView.prototype.bindTodoSave = function(selector, fn) {\n    $(selector)\n        .unbind('change keyup')\n        .on('change keyup', fn);\n}\n\n/**\n * Save todo item data to localStorage\n */\nView.prototype.saveTodo = function() {\n    var items = [];\n\n    // iterate through todo items\n    var $items = $('.todo .input-group');\n\n    $items.each(function() {\n        // get text\n        var text = $(this).find('input[type=text]').val();\n        \n        var item = {\n            checked: $(this).find('input[type=checkbox]').prop('checked'),\n            text: text\n        };\n\n        // append to array\n        items.push(item);\n    });\n    \n    // serialize array and write to localStorage\n    localStorage.todoItems = JSON.stringify(items);\n};\n\nmodule.exports = View;"]}